package us.bridgeses.Minder;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.location.Criteria;
import android.location.Location;
import android.location.LocationManager;
import android.os.Bundle;
import android.view.View;
import android.widget.Toast;

import com.google.android.gms.maps.CameraUpdate;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.MapFragment;
import com.google.android.gms.maps.model.Circle;
import com.google.android.gms.maps.model.CircleOptions;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;

//TODO: Handle unavailable service cases
public class MapsActivity extends Activity implements GoogleMap.OnMapLongClickListener,GoogleMap.OnMapClickListener{

    private GoogleMap mMap; // Might be null if Google Play services APK is not available.
    LatLng location;
    LatLng cameraLocation;
    Circle myCircle;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_maps);

        Intent intent = getIntent();
        Bundle incoming = intent.getExtras();
        if (incoming != null) {
            location = incoming.getParcelable("Location");
        }
        setUpMapIfNeeded();
    }

    @Override
    protected void onResume() {
        super.onResume();
        setUpMapIfNeeded();
    }

    public void save(View view){
        Intent intent = new Intent();
        Bundle bundle = new Bundle();
        bundle.putParcelable("Location", location);
        intent.putExtras(bundle);
        setResult(RESULT_OK, intent);
        finish();
    }

    public void cancel(View view){
        setResult(RESULT_CANCELED);
        finish();
    }

    /**
     * Sets up the map if it is possible to do so (i.e., the Google Play services APK is correctly
     * installed) and the map has not already been instantiated.
     * <p>
     * If it isn't installed {@link MapFragment} (and
     * {@link com.google.android.gms.maps.MapView MapView}) will show a prompt for the user to
     * install/update the Google Play services APK on their device.
     * <p>
     * A user can return to this FragmentActivity after following the prompt and correctly
     * installing/updating/enabling the Google Play services. Since the FragmentActivity may not
     * have been completely destroyed during this process (it is likely that it would only be
     * stopped or paused), {@link #onCreate(Bundle)} may not be called again so we should call this
     * method in {@link #onResume()} to guarantee that it will be called.
     */
    private void setUpMapIfNeeded() {
        // Do a null check to confirm that we have not already instantiated the map.
        if (mMap == null) {
            // Try to obtain the map from the MapFragment.
            mMap = ((MapFragment) getFragmentManager().findFragmentById(R.id.map))
                    .getMap();
            cameraLocation = getLocation();
            CameraUpdate cameraUpdate = CameraUpdateFactory.newLatLngZoom(cameraLocation,14);
            mMap.setMyLocationEnabled(true);
            mMap.animateCamera(cameraUpdate);
            mMap.setOnMapLongClickListener(this);
            // Check if we were successful in obtaining the map.
            if (mMap != null) {
                setUpMap();
            }
        }
    }


    private void setUpMap() {
        if ((location.longitude != 0) || (location.latitude != 0)) {
            CircleOptions circleOptions = new CircleOptions()
                    .center(location)   //set center
                    .radius(500)   //set radius in meters
                    .fillColor(0x400000ff)  //default
                    .strokeColor(Color.BLUE)
                    .strokeWidth(5);

            myCircle = mMap.addCircle(circleOptions);
        }
    }

    private LatLng getLocation() {
        LatLng location;
        LocationManager lm = (LocationManager) this.getSystemService(Context.LOCATION_SERVICE);
        Criteria criteria = new Criteria();
        criteria.setAccuracy(Criteria.ACCURACY_FINE);
        criteria.setPowerRequirement(Criteria.POWER_LOW);
        Location lastKnown = lm.getLastKnownLocation(lm.getBestProvider(criteria, true));
        if (lastKnown != null) {
            location = new LatLng(lastKnown.getLatitude(),lastKnown.getLongitude());
        }
        else {
            location = new LatLng(0,0);     //TODO run location service and update location
        }
        return location;
    }



    @Override
    public void onMapLongClick(LatLng point) {
        //TODO: Add options menu for radius
    }

    @Override
    public void onMapClick(LatLng point) {
        location = point;
        if (myCircle != null){
            myCircle.remove();
            myCircle = null;
        }
        CircleOptions circleOptions = new CircleOptions()
                .center(point)   //set center
                .radius(500)   //set radius in meters
                .fillColor(0x400000ff)
                .strokeColor(Color.BLUE)
                .strokeWidth(5);

        myCircle = mMap.addCircle(circleOptions);
    }
}
